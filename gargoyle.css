/* Gargoyle.css */



/*
	Contents
	- Section elements
	- Text elements
	- List elements
	- Figure elements
	- Table elements
	- Inline elements
	- Inline lists
	- Inline classes
	- Action buttons
	- Unhide content after CSS is loaded
*/



/*
	Legacy support
	Only browsers with >0.1% market share are noted

	Optional features (unsupported browsers):
		text-rendering (IE –11, Edge –18, Firefox –76 on Mac, Chrome –83 on Mac, Android –4.3, Samsung –11.1)
			! Android –4.3 breaks rendering of custom fonts with text-rendering: optimizeLegibility
		overflow-wrap (IE –11, Edge –17, O Mini, Android –4.3, KaiOS 2.5) fallback on deprecated alias word-wrap
		hyphens (IE –9, Chrome –54, Chrome 55–83 partial, Opera 42–66 partial, O Mini all, Android –4.4.4, Android Chrome 80 partial, UC 12.12 partial, Samsung 4, QQ 1.2) -moz- for Firefox 6–42, -ms- for IE 10–11, Edge 12–18, -webkit- for Safari 5.1–13.1 & iOS 4.2–13.4,
		hyphens for English (IE –9, Chrome –54, Android –4.4.4, Samsung –4)
		tab-size (IE –11, Edge –18, Android –4.3), -moz- for Firefox 4–76 & Firefox Android 68 & KaiOS 2.5, -o- for Opera 11.5–12.1 & O Mini & O Mobile 12–12.1
		width: max-content (IE –11, Edge –18, Android –4.4.4, Samsung –4) -moz- for Firefox 3–65, -webkit- for Chrome 22–45, intrinsic value for Safari 3.1–10.1 & iOS 3.2–10.3
		:visited (Android –4.3)
		border-radius (IE –8, O Mini) -moz- for Firefox 2–3.6, -webkit- for Chrome 4 & Safari 3.1–4 & iOS 3.2 & Android 2.1
		font-feature-settings (IE –9, O Mini, Android –4.3) -moz- old syntax for Firefox 4–14, -moz- for Firefox 15–33, -webkit- for Chrome 16–47 & Opera 15–34 & Android 4.4–4.4.4 & Samsung 4
		flex (IE –10) -webkit- for Chrome 22–28 & Safari 8 & iOS 8–8.4

	Features with fallback mechanisms (unsupported browsers):
		initial value (IE –11, O Mini all) -moz- for Firefox 2–3
		vw units (IE –8, O Mini, Android –4.3)
		calc() (IE –11, Safari 5.1, O Mini, Android –4.3) -moz- for Firefox 4–15, -webkit- for Chrome 19–25 & Safari 6 & iOS 6.1
			! IE 9 crashes when used in the background-position property
			! Various known issues: https://caniuse.com/#feat=calc
		text-align: start or end (IE –11, Edge –18, Android –4.4.4)
		::first-letter (IE –8) ffbug workaround for Firefox using -moz-animation & @-moz-keyframes

	Dependent features for action buttons, which will fallback to plain hyperlinks (unsupported browsers):
		background-image multiple (IE –8)
		background-image SVG (IE –8, Safari –13.1, iOS –13.4)
		linear-gradient() (IE –9)
		linear-gradient(to) (IE –9)
		background-size (IE –8)
		background-repeat (Android IE –4.4.4)
		background-position edge offset (IE –8, Android –4.3)

	Features with no implemented fallback mechanisms (and browsers with no support):
		@supports (IE –11, Android –4.3)
		margin: auto (Android –4.4.4)
		rem units (IE –8, IE 9–10 partial)
			! IE 9–10 ignores entire declaration when used in pseudo-elements or in the font shorthand property
		vh units (IE –8, O Mini, Android –4.3)
		:hover (Android –4.4.4)
*/



/*
	Section elements
*/
html {
	margin: 0;
	padding: 0;

	color: darkslategray;

	font-family: sans-serif;
	font-size: 16px;
	line-height: 1.5rem;

	/* Nominally an SVG property but good for Chrome; breaks Android 4.3 */
	text-rendering: optimizeLegibility;
}

body {
	display: block;

	margin: 0;
	padding: 0;
	padding-bottom: 3rem;

	color: darkslategray;
	background-color: snow;

	/* Workaround for IE bug with margin: auto column centring; parent container needs this. */
	text-align: center;
}

main {
	display: block;

	width: 40rem;  /* $column-width */
	max-width: 91.666667%;
	max-width: 91.666667vw;  /* 100vw - 2 * $main-margin */
	max-width: calc(100vw - 2rem);

	margin: 1.5rem auto;
	padding: 0;

	text-align: left;
	text-align: start;
	text-align: -moz-initial;
	text-align: initial;
}

nav {
	display: block;

	margin: 1.5rem auto;
	padding: 0;

	text-align: left;
	text-align: start;
	text-align: -moz-initial;
	text-align: initial;
}

article {
	display: block;

	margin: 1.5rem auto;
	padding: 0;

	text-align: left;
	text-align: start;
	text-align: -moz-initial;
	text-align: initial;

	/* CSS3 Text */
	-moz-hyphens: auto;
	-ms-hyphens: auto;
	-webkit-hyphens: auto;
	hyphens: auto;

	word-wrap: break-word;  /* alias of overflow-wrap */
	overflow-wrap: break-word;

	text-indent: 0;
	-moz-tab-size: 4;
	-o-tab-size: 4;
	tab-size: 4;
}

header {
	display: block;

	margin: 1.5rem auto;
	padding: 0;

	text-align: left;
	text-align: start;
	text-align: -moz-initial;
	text-align: initial;
}

footer {
	display: block;

	margin: 1.5rem auto;
	padding: 0;

	text-align: left;
	text-align: start;
	text-align: -moz-initial;
	text-align: initial;
}

section {
	display: block;

	margin: 1.5rem auto;
	padding: 0;

	text-align: left;
	text-align: start;
	text-align: -moz-initial;
	text-align: initial;
}


/*
	Expansion beyond main column
*/
/* If main supports these width calculations, expand outside of column and use these as margins */
/* If neither are supported, fall back to being bound by column */
@supports (max-width: calc(50% - 50vw + 1rem)) {
	figure {
		margin-left: calc(50% - 50vw + 1rem);
		margin-right: calc(50% - 50vw + 1rem);
	}

	@supports selector(:has(code)) {
		pre:has(code), pre:has(samp) {
			margin-left: calc(50% - 50vw + 1rem);
			margin-right: calc(50% - 50vw + 1rem);
		}
	}
}



/*
	Text elements
*/
p {
	display: block;

	margin-top: 0.75rem;
	margin-bottom: 1.5rem;
	margin-left: 0;
	margin-right: 0;
	padding: 0;
}

h1 {
	display: block;

	margin-top: 2.25rem;
	margin-bottom: 1.5rem;
	margin-left: 0;
	margin-right: 0;
	padding: 0;

	font-size: 2rem;
	line-height: 2.25rem;

	/* CSS3 Text */
	-moz-hyphens: none;
	-webkit-hyphens: none;
	-ms-hyphens: none;
	hyphens: none;
}
h2, h3, h4, h5, h6 {
	display: block;

	margin-top: 2.25rem;
	margin-bottom: 0.75rem;
	margin-left: 0;
	margin-right: 0;
	padding: 0;
}
hgroup > h1, hgroup > h2, hgroup > h3, hgroup > h4, hgroup > h5, hgroup > h6 {
	margin-top: 0;
}
hgroup {
	display: block;

	margin-top: 2.25rem;
	margin-bottom: 0.75rem;
	margin-left: 0;
	margin-right: 0;
	padding: 0;
}
h2 {
	font-size: 1.666667rem;
	font-weight: bold;
}
h3 {
	font-size: 1.333333rem;
	font-weight: bold;
}
h4 {
	font-size: 1.111111rem;
	font-weight: bold;
}
h5 {
	margin-left: 1rem;

	font-size: 1rem;
	font-weight: bold;
}
h6 {
	margin-left: 2rem;

	font-size: 1rem;
	font-weight: bold;
	font-style: italic;
}

blockquote {
	display: block;

	margin: 1.5rem 2rem;
	padding: 0;
}

main aside {
	display: block;

	margin-top: 0;
	margin-bottom: 0;
	margin-left: 2rem;
	margin-right: 0;
	padding: 0;

	color: grey;

	text-align: left;
	text-align: start;
	text-align: -moz-initial;
	text-align: initial;
}
@media (min-width: 34rem) {  /* 2 * $aside-width + $column-margin */
	main aside {
		float: right;

		width: 16rem;  /* $aside-width */
		margin: 1.5rem 2rem;
	}
}
@media (min-width: 76rem) {  /* $default-column-width + 2 * ($aside-width + $column-margin) */
	main aside {
		position: absolute;
		float: none;

		margin-top: 0;
		margin-left: 42rem;  /* $default-column-width + $column-margin */
		margin-right: 0;

		color: inherit;
	}
}

pre {
	display: block;

	margin-top: 0.75rem;
	margin-bottom: 1.5rem;
	margin-left: 0;
	margin-right: 0;
	padding: 0;

	/*white-space: pre-wrap;
	white-space: -moz-pre-wrap;
	white-space: -pre-wrap;
	white-space: -o-pre-wrap;
	word-wrap: break-word;*/
}

pre > code, pre > samp {
	display: block;

	margin: 0 auto;
	padding: 0.75rem 0.5rem;

	width: -moz-max-content;
	width: -webkit-max-content;
	width: intrinsic;
	width: max-content;
	min-width: 40rem;

	border-radius: 6px;
}

pre > code.g-frame, pre > samp.g-frame {
	border: 2px solid darkslategrey;
	border-radius: 2px;
}

pre > code[title]::before, pre > samp[title]::before {
	content: attr(title);
	display: block;

	margin-top: -0.375rem;
	margin-bottom: 0.375rem;

	color: grey;
	text-align: right;
}
pre > code[title].g-title-left::before, pre > samp[title].g-title-left::before {
	text-align: left;
}
pre > code[title].g-title-right::before, pre > samp[title].g-title-right::before {
	text-align: right;
}
pre > code[title].g-title-centre::before, pre > samp[title].g-title-centre::before, pre > code[title].g-title-center::before, pre > samp[title].g-title-center::before {
	text-align: center;
}

hr {
	display: block;

	margin: 2.25rem 0;
	margin-bottom: calc(2.25rem - 1px);
	padding: 0;

	border: 0;
	border-bottom: 1px solid darkslategrey;
}


/*
	Numbered sections
*/
.g-counter, .g-counter1, .g-counter2, .g-counter3, .g-counter4, .g-counter5, .g-counter6 {
	counter-reset: h1-section h2-section h3-section h4-section h5-section h6-section;
}
.g-counter h1, .g-counter1 h1, .g-counter2 h1, .g-counter3 h1, .g-counter4 h1, .g-counter5 h1, .g-counter6 h1 {
	counter-increment: h1-section;
}
.g-counter h2, .g-counter1 h2, .g-counter2 h2, .g-counter3 h2, .g-counter4 h2, .g-counter5 h2, .g-counter6 h2 {
	counter-increment: h2-section;
}
.g-counter h3, .g-counter1 h3, .g-counter2 h3, .g-counter3 h3, .g-counter4 h3, .g-counter5 h3, .g-counter6 h3 {
	counter-increment: h3-section;
}
.g-counter h4, .g-counter1 h4, .g-counter2 h4, .g-counter3 h4, .g-counter4 h4, .g-counter5 h4, .g-counter6 h4 {
	counter-increment: h4-section;
}
.g-counter h5, .g-counter1 h5, .g-counter2 h5, .g-counter3 h5, .g-counter4 h5, .g-counter5 h5, .g-counter6 h5 {
	counter-increment: h5-section;
}
.g-counter h6, .g-counter1 h6, .g-counter2 h6, .g-counter3 h6, .g-counter4 h6, .g-counter5 h6, .g-counter6 h6 {
	counter-increment: h6-section;
}

.g-counter h1 {
	counter-reset: h2-section h3-section h4-section h5-section h6-section;
}
.g-counter h2 {
	counter-reset: h3-section h4-section h5-section h6-section;
}
.g-counter h3 {
	counter-reset: h4-section h5-section h6-section;
}
.g-counter h4 {
	counter-reset: h5-section h6-section;
}
.g-counter h5 {
	counter-reset: h6-section;
}

.g-counter .g-nocount, .g-counter1 .g-nocount, .g-counter2 .g-nocount, .g-counter3 .g-nocount, .g-counter4 .g-nocount, .g-counter5 .g-nocount, .g-counter6 .g-nocount {
	counter-increment: none;
}
.g-counter .g-nocount::before, .g-counter1 .g-nocount::before, .g-counter2 .g-nocount::before, .g-counter3 .g-nocount::before, .g-counter4 .g-nocount::before, .g-counter5 .g-nocount::before, .g-counter6 .g-nocount::before {
	content: none;
}

.g-counter1 h1::before {
	content: counter(h1-section) ". ";
}
.g-counter1 h2::before {
	content: counter(h1-section) "." counter(h2-section) ". ";
}
.g-counter1 h3::before {
	content: counter(h1-section) "." counter(h2-section) "." counter(h3-section) ". ";
}
.g-counter1 h4::before {
	content: counter(h1-section) "." counter(h2-section) "." counter(h3-section) "." counter(h4-section) ". ";
}
.g-counter1 h5::before {
	content: counter(h1-section) "." counter(h2-section) "." counter(h3-section) "." counter(h4-section) "." counter(h5-section) ". ";
}
.g-counter1 h6::before {
	content: counter(h1-section) "." counter(h2-section) "." counter(h3-section) "." counter(h4-section) "." counter(h5-section) "." counter(h6-section) ". ";
}

.g-counter2 h2::before {
	content: counter(h2-section) ". ";
}
.g-counter2 h3::before {
	content: counter(h2-section) "." counter(h3-section) ". ";
}
.g-counter2 h4::before {
	content: counter(h2-section) "." counter(h3-section) "." counter(h4-section) ". ";
}
.g-counter2 h5::before {
	content: counter(h2-section) "." counter(h3-section) "." counter(h4-section) "." counter(h5-section) ". ";
}
.g-counter2 h6::before {
	content: counter(h2-section) "." counter(h3-section) "." counter(h4-section) "." counter(h5-section) "." counter(h6-section) ". ";
}


.g-counter3 h3::before {
	content: counter(h3-section) ". ";
}
.g-counter3 h4::before {
	content: counter(h3-section) "." counter(h4-section) ". ";
}
.g-counter3 h5::before {
	content: counter(h3-section) "." counter(h4-section) "." counter(h5-section) ". ";
}
.g-counter3 h6::before {
	content: counter(h3-section) "." counter(h4-section) "." counter(h5-section) "." counter(h6-section) ". ";
}

.g-counter4 h4::before {
	content: counter(h4-section) ". ";
}
.g-counter4 h5::before {
	content: counter(h4-section) "." counter(h5-section) ". ";
}
.g-counter4 h6::before {
	content: counter(h4-section) "." counter(h5-section) "." counter(h6-section) ". ";
}

.g-counter5 h5::before {
	content: counter(h5-section) ". ";
}
.g-counter5 h6::before {
	content: counter(h5-section) "." counter(h6-section) ". ";
}

.g-counter6 h6::before {
	content: counter(h6-section) ". ";
}



/*
	List elements
*/
.g-continue {
	margin-bottom: 0;
}
ul, menu, ol, dl {
	display: block;

	margin-top: 0.75rem;
	margin-bottom: 1.5rem;
	margin-left: 0;
	margin-right: 0;
	padding: 0;

	list-style-position: outside;
}
ul ul, ul menu, ul ol, menu ul, menu menu, menu ol, ol ul, ol menu, ol ol, dl ul, dl menu, dl ol{
	margin-bottom: 0.75rem;
}
ul dl, menu dl, ol dl, dl dl {
	margin-left: 2rem;
	margin-bottom: 0.75rem;
}

li {
	display: list-item;

	margin: 0;
	margin-left: 2rem;
	padding: 0;
}

dt {
	display: inline;

	margin: 0;
	padding: 0;

	font-weight: bold;
}
dt::before {
	content: '';
	display: block;
}
dd {
	display: inline;

	margin: 0;
	margin-left: 1.5rem;
	padding: 0;
}
dd::after {
	content: '';
	display: block;
}



/*
	Inline elements
*/
img.g-inline, picture.g-inline, svg.g-inline {
	display: inline;

	max-height: 1.25rem;
	width: auto;

	vertical-align: middle;
}

@supports (display: inline-flex) or (display: -ms-inline-flexbox) {
	.g-inline, .g-subinline {
		display: -ms-inline-flexbox;
		display: -webkit-inline-flex;
		display: inline-flex;
		flex-flow: row wrap;

		margin: 0;
		padding: 0;
	}
	ul.g-inline, menu.g-inline, ol.g-inline, dl.g-inline {
		display: flex;  /* lists can never be inside p, so no point making it inline-flex */

		margin-top: 0.75rem;
		margin-bottom: 1.5rem;
		margin-left: auto;
		margin-right: auto;
	}

	.g-inline > li, .g-subinline > li, .g-inline > .g-li, .g-subinline > .g-li {
		display: block;
		-webkit-flex: 0 0 auto;
		flex: 0 0 auto;

		margin: 0;
		padding: 0;
	}
	.g-inline > li::after, .g-subinline > li::after, .g-inline > .g-li::after, .g-subinline > .g-li::after {
		content: '·';
		display: inline;

		padding-left: 0.3em;  /* $separator-padding */
		padding-right: 0.3em;  /* $separator-padding */
		line-height: 0;

		color: grey;

		font-weight: bold;
	}
	.g-inline > li:last-child::after, .g-subinline > li:last-child::after, .g-inline > .g-li:last-child::after, .g-subinline > .g-li:last-child::after {
		content: none;
	}

	@supports (counter-reset: count) and (counter-increment: count) and (content: counter(count)) {
		ol.g-inline {
			counter-reset: inline-list;
		}
		ol.g-inline > li {
			counter-increment: inline-list;
		}
		ol.g-inline > li::before {
			content: counter(inline-list) ". ";
		}
		ol.g-subinline {
			counter-reset: subinline-list;
		}
		ol.g-subinline > li {
			counter-increment: subinline-list;
		}
		ol.g-subinline > li::before {
			content: counter(subinline-list) ". ";
		}
	}

	.g-inline > dt, .g-subinline > dt {
		display: block;
		-webkit-flex: 0 0 auto;
		flex: 0 0 auto;

		margin: 0;
		padding: 0;

		font-weight: bold;
	}
	.g-inline > dt::after, .g-subinline > dt::after {
		content: ':';
		display: inline;

		margin-right: 0.3em;  /* $separator-padding */
	}
	.g-inline > dt:last-child::after, .g-subinline > dt:last-child::after {
		content: none;
	}

	.g-inline > dd, .g-subinline > dd {
		display: block;
		-webkit-flex: 0 0 auto;
		flex: 0 0 auto;

		margin: 0;
		padding: 0;
	}
	.g-inline > dd::after, .g-subinline > dd::after {
		content: '·';
		display: inline;

		font-size: initial;
		font-weight: bold;
		color: grey;

		margin-left: 0.3em;  /* $separator-padding */
		margin-right: 0.3em;  /* $separator-padding */
	}
	.g-inline > dd:last-child::after, .g-subinline > dd:last-child::after {
		content: none;
	}

	.g-subinline {
		flex-flow: row nowrap;

		font-size: 0.833333rem;
		line-height: 1.125rem;
	}
	.g-subinline::before {
		content: '(';
	}

	.g-subinline::after {
		content: ')';
	}
}



/*
	Figure elements
*/
main img, main picture, main svg {
	display: block;

	margin-top: 0.75rem;
	margin-bottom: 2.25rem;
	margin-left: 0;
	margin-right: 0;
	padding: 0;

	max-height: 80vh;
	max-width: 100%;
}
main img.g-frame, main picture.g-frame, main svg.g-frame {
	border: 2px solid darkslategrey;
	border-radius: 2px;
}
main a > img.g-frame, main a > picture.g-frame, main a > svg.g-frame {
	border-color: maroon;
}

figure {
	display: block;

	margin-top: 0.75rem;
	margin-bottom: 2.25rem;
	padding: 0;

	text-align: center;
}

figcaption {
	display: block;

	/* Effectively centre for single line, left-align for multiple lines */
	width: -moz-max-content;
	width: -webkit-max-content;
	width: intrinsic;
	width: max-content;
	max-width: 38rem;  /* $column-width */

	margin: 0.75rem auto;  /* figcaption may be above or below */
	padding: 0;

	text-align: left;
}

figure > img, figure > picture, figure > svg, figure > table {
	display: block;

	margin: 0 auto;

	/* max-width similar to main, but less 2rem in the final declaration */
	max-width: 91.666667%;
	max-width: 91.666667vw;  /* 100vw - 2 * $main-margin */
	max-width: calc(100vw - 4rem);
}

figure > a {
	display: inline-block;

	margin: 0;
}
figure > a > img, figure > a > picture, figure > a > svg, figure > a > table {
	display: inline-block;

	margin: 0;

	vertical-align: top;
}

figure.g-bounded {
	margin-left: 0;
	margin-right: 0;
}
figure.g-bounded > img, figure.g-bounded > picture, figure.g-bounded > svg, figure.g-bounded > table {
	max-width: 100%;
}
figure.g-bounded > a > img, figure.g-bounded > a > picture, figure.g-bounded > a > svg, figure.g-bounded > a > table {
	max-width: 100%;
}



/*
	Table elements
	Defect: gridding of td, th padding and border 1px
*/
table {
	display: table;

	width: -moz-max-content;
	width: -webkit-max-content;
	width: intrinsic;
	width: max-content;

	margin-top: 0.75rem;
	margin-bottom: 2.25rem;
	margin-left: 0;
	margin-right: 0;
	padding: 0;

	border-top: 1px solid lightgrey;
	border-collapse: collapse;

	hyphens: auto;

	overflow-x: auto;
}
td, th {
	display: table-cell;

	margin: 0;
	padding: 0.1875rem 0.5em;
}
th, thead td {
	text-align: center;

	border-bottom: 1px solid lightgrey;
}
td.g-left, th.g-left {
	text-align: left;
}
td.g-right, th.g-right {
	text-align: right;
}
td.g-centre, th.g-centre, td.g-center, th.g-center {
	text-align: center;
}
thead {
	display: table-header-group;

	margin: 0;
	padding: 0;

	border-bottom: 1px solid lightgrey;
}
tbody {
	display: table-row-group;

	margin: 0;
	padding: 0;

	border-bottom: 1px solid lightgrey;
}
tfoot {
	display: table-footer-group;

	margin: 0;
	padding: 0;

	border-bottom: 1px solid lightgrey;
}



/*
	Inline elements
*/
a {
	display: inline;

	color: maroon;
	text-decoration: underline;
}
a:hover {
	text-decoration: none;
}
a:visited {
	color: #600000;
}

dfn {
	font-weight: bold;
	font-style: inherit;
}

small {
	font-size: 0.833333rem;
	line-height: 1.125rem;
}

/* Redefine these to prevent increasing main line height */
sup {
	font-size: 0.833333rem;
	line-height: 1.125rem;
	vertical-align: top;
}
sub {
	font-size: 0.833333rem;
	line-height: 1.125rem;
	vertical-align: bottom;
}

code, samp {
	display: inline;

	box-sizing: border-box;
	padding: 0 0.2em;

	font-family: monospace;
	line-height: 1.3rem;  /* border-radius increases line height */
	line-height: calc(1.5rem - 0.2em);

	-moz-border-radius: 0.2em;
	-webkit-border-radius: 0.2em;
	border-radius: 0.2em;

}
code {
	background-color: seashell;
}
samp {
	background-color: ghostwhite;
}

kbd {
	display: inline-block;

	padding: 0.1em 0.2em;
	margin: 0 0.1em;

	font-family: inherit;
	font-size: 0.9375rem;
	font-weight: 500;
	/* Same as abbr */

	line-height: 1.1rem;  /* border-radius increases line height */
	line-height: calc(1.3rem - 0.2em - 0.2em - 1px);

	border: 1px solid lightgrey;
	box-shadow: 0 1px 0 1px lightgrey;

	-moz-border-radius: 0.2em;
	-webkit-border-radius: 0.2em;
	border-radius: 0.2em;
}
h1 > kbd, h2 > kbd, h3 > kbd, h4 > kbd, h5 > kbd, h6 > kbd, b > kbd, strong > kbd, dfn > kbd, dt > kbd {
	font-weight: 709;
}
kbd > code:first-child, kbd > samp:first-child {
	padding-left: 0;
}
kbd > code:last-child, kbd > samp:last-child {
	padding-right: 0;
}

.g-math {
	font-family: serif;
}
.g-mathrm, .g-mathrm var {
	font-family: serif;
	font-style: normal;
}
.g-mathbf, .g-mathbf var {
	font-family: serif;
	font-weight: bold;
	font-style: normal;
}

/* Workaround for Firefox adding extra space after an element that has display: inline-block and a ::first-letter with a change of font-size; fixed by forcing reflow */
@-moz-keyframes ffbug { from { padding-right: 0.1px ; } to { padding-right: 0; } }
abbr {
	display: inline;

	font-size: 0.9375em;
	font-weight: 500;
}
h1 > abbr, h2 > abbr, h3 > abbr, h4 > abbr, h5 > abbr, h6 > abbr, b > abbr, strong > abbr, dfn > abbr, dt > abbr {
	font-weight: 700;
}
abbr.g-capital {
	display: inline-block;

	margin: 0;
	padding: 0;

	-moz-animation: ffbug 0.1s ease 1;
}
abbr.g-capital::first-letter {
	font-size: 1.142857em;  /* 8/7 */
	font-weight: inherit;
}


/*
	Inline classes
*/
.g-nohyphen {
	-moz-hyphens: none;
	-webkit-hyphens: none;
	-ms-hyphens: none;
	hyphens: none;
}



/*
	Action buttons
*/
a.g-button {
	display: inline-block;
	box-sizing: border-box;

	padding-top: 0.9375rem;
	padding-top: calc(0.9375rem - 2px);
	padding-bottom: 0.9375rem;
	padding-bottom: calc(0.9375rem - 2px);
	padding-left: 2rem;
	padding-right: 2rem;

	line-height: 1.125rem;
	max-width: 100%;

	border: 2px solid;
	border-radius: 6px;

	overflow: hidden;

	text-decoration: none;

	transition: all 100ms ease;
}
a.g-button:hover {
	background-color: #ffd4d1;
}

a.g-go {
	color: green;
	border-color: green;
	background-color: #d0f0d0;
}
a.g-go:hover {
	background-color: #b8f0b8;
}
@supports
	(background-image: url('icons/go.svg'), linear-gradient(to right, green 1px, transparent 1px)) and
	(background-size: 1.25rem, 1px 60%) and
	(background-repeat: no-repeat, no-repeat)
{
	a.g-go {
		padding-right: 4.5rem;
		padding-right: calc(4.5rem + 1px);

		background-image:
			url('icons/go.svg'),
			linear-gradient(to right, green 1px, transparent 1px);
		background-size:
			1.25rem,
			1px 60%;
		background-repeat: no-repeat;
		background-position:
			top 50% right 1rem,
			top 50% right 3.25rem;
	}

	a.g-go:hover {
		background-size:
			1.5rem,
			1px 60%;
		background-position:
			top 50% right 0.875rem,
			top 50% right 3.25rem;
	}
	/* Detect for MS Edge; disable size increase due to bad behaviour of its transition, which is less obvious in the larger transition of :focus  */
	_:-ms-lang(x), _:-webkit-full-screen, a.g-go:hover {
		background-size:
			1.25rem,
			1px 60%;
		background-position:
			top 50% right 1rem,
			top 50% right 3.25rem;
	}

	a.g-go:focus {
		background-image: url('icons/go.svg');
		background-size: 1.5rem;
		background-repeat: no-repeat;
		background-position: center;

		color: transparent;

		transition: all 300ms ease;
	}
}



/*
	Unhide content after CSS is loaded
	Add id="g-bodymask" to body element and apply
		body { visibility: hidden; }
	in internal stylesheet of HTML file, to be overwritten by the following
*/
#g-bodymask {
	visibility: visible;
}
